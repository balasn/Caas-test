<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_riscn_risc_netwo_risc_queue</collection>
        <condition>(current.state == 'ready' || current.state == 'Ready')</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>RISC Queue Post Insert Process</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	var loggr = new RISCLogger();
	loggr.debug('Queue business rule called.');
	// Add your code here
	try
	{
		var type = current.type+'';
		var payload = '' ;
		var method = '' ;
		var body = '' ;

		var call = '';
		var response = '';
		var que = new x_riscn_risc_netwo.RISC_Queue_Util();
		
		var asset = '';
		var device = '';

		switch(type){

			case "api" :    current.state = "Processing";
							current.update();																
										
							payload = current.payload;
							device = current.device_type;
							method = current.method;
							body = current.body;

							loggr.info('Processing API of '+device);				
							loggr.debug('Processing API:- '+payload);
				
							call = new x_riscn_risc_netwo.RISC_Populate_Queue();

							var i=1;

							if(device == 'stacks' || device == 'tags'){
								response = call.makeApiCall(payload, method, body, '');
								JSON.parse(response);
								que.insertIntoQueue(device, 'json', response, '', '');
							}else{
								do{
									response = call.makeApiCall(payload, method, body, i);
									var rspn = JSON.parse(response);
									asset = rspn.assets + '';	
									que.insertIntoQueue(device, 'json', response, '', '');

									i++;
								}while(asset.trim());
							}

							current.state = "Complete";

							break;

			case "json" :   current.state = "Processing";
							current.update();

							payload = current.payload;
							device = current.device_type;
				
							loggr.info('Processing JSON of '+device);
							loggr.debug('Processing JSON for device type:- '+device);

							call = new x_riscn_risc_netwo.RISC_Populate_Queue();
							call.addMultipleDevicesToIntermediateTable(device, payload);

							current.state = "Complete";

							break;
				
			case "delete" : current.state = "Processing";
							current.update();

							payload = current.payload;

							loggr.info('Clearing Table:- '+payload);
							loggr.debug('Clearing Table:- '+payload);
				
							var dltbl = new GlideRecord(payload);
							dltbl.setLimit(500);
							do{	
								dltbl.setWorkflow(false);
								dltbl.deleteMultiple();							
								//dltbl = new GlideRecord(payload);
								dltbl.setLimit(500);
								dltbl.query();
							}while(dltbl.next());							

							current.state = "Complete";
							break;
		}
		current.update();
	}catch(e){
		current.state = "Error";
		current.update();
		loggr.error('Error Caught inside Queue business rule. Error:- '+e);
		loggr.error("Error Response:- "+response);
	}
	
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-10-30 10:41:13</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>c8afbdbadbc607006cded5f0cf9619a9</sys_id>
        <sys_mod_count>38</sys_mod_count>
        <sys_name>RISC Queue Post Insert Process</sys_name>
        <sys_overrides/>
        <sys_package display_value="RISC Networks" source="x_riscn_risc_netwo">e1ae8eb4dba54f00e3b55421cf9619e7</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="RISC Networks">e1ae8eb4dba54f00e3b55421cf9619e7</sys_scope>
        <sys_update_name>sys_script_c8afbdbadbc607006cded5f0cf9619a9</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-01-18 15:36:03</sys_updated_on>
        <template/>
        <when>async</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=c8afbdbadbc607006cded5f0cf9619a9"/>
</record_update>
